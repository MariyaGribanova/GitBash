  Рассмотрим ситуацию: мы делаем какой-то важный документ, что-то в нём исправляем, показываем руководителю, который говорит, что нужно ещё что-то поправить; 
мы исправляем, снова несём на проверку, и нам говорят, что предыдущая версия была лучше и надо всё вернуть. Здесь могут возникнуть сложности, т.к. мы уже 
всё сохранили и никакой старой версии не осталось и как вернуться к старой версии, ничего не исправляя, большой вопрос. Такая проблема возникает у разработчиков 
каждый день, т.к.:
- постоянно могут меняться бизнес-требования (потому что заказчики могут приносить новые запросы или запросы от пользователей);
- тестировщики проверяют код, находят какие-то ошибки, которые надо исправлять (одну ошибку исправили, отнесли тестировщику, нашли другую, а оказалось, что 
певаря ошибка была не ошибкой, а некоторой особенностью программы).

!!! В РАБОТЕ ИЗМЕНЕНИЯ БУДУТ ПРОИСХОДИТЬ ПОСТОЯННО И В ЭТОМ ПОМОГАЕТ СИСТЕМА КОНТРОЛЯ ВЕРСИЙ

  НАЗНАЧЕНИЕ GIT
  1) Отслеживать изменения в документах;
  2) Возможность отменить любые изменения;
  3) Возможность в любой момент вернуться на предыдущее состояние системы;
  4) Даёт возможность двум разработчикам работать независимо, а затем собрать результаты работы в единое приложение;
  5) Позволяет увидеть всю историю изменений в деталях (как, кто, в какое время менял строки кода и в какой задаче это происходило);
  6) Параллельная работа с кодом;


!!! ТЕСТИРОВЩИКИ ИСПОЛЬЗУЮТ GIT, ЧТОБЫ ПОЛУЧАТЬ ДОСТУП К РАЗЛИЧНЫМ ВЕРСИЯМ КОДА ДЛЯ ИХ ПРОВЕРКИ, Т.Е. ДЛЯ ТЕСТИРОВЩИКА GIT - ЭТО, СКОРЕЕ, СИСТЕМА ХРАНЕНИЯ 
ВЕРСИЙ, НЕЖЕЛИ СИСТЕМА УПРАВЛЕНИЯ ВЕРСИЯМИ

  ОСОБЕННОСТИ GIT
  • GIT в первую очередь предназначен для работы с текстовыми данными, именно с ними он работает эффективно;
  • GIT неэффективно определяет изменения в нетекстовых файлах, поэтому придётся хранить все копии этих документов;
  • GIT не хранит полные копии нескольких версий документа, а хранит начальную его версию и внесённые изменения, что позволяет существенно сократить объём 
  этих версий;
  • GIT не хранит 2 отдельные копии документов, чтобы потом их склеивать, он хранит именно сами правки (если говорить о текстовом файле, то он запоминает 
какие строки были изменены и как теперь выглядят эти строки). Хранение только изменений в документах позволяет с небольшими затратами сохранять все предыдущие 
версии документов;
  • Параллельная одновременная работа осуществляется с помощью механизма ветвления.

!!! GIT - ЭТО ТОЛЬКО СИСТЕМА КОНТРОЛЯ ВЕРСИЙ. GITHUB, GITLAB, BITBUCKET ЯВЛЯЮТСЯ ВЕБ-ИНТЕРФЕЙСОМ К GIT И ПРЕДСТАВЛЯЮТ ОТДЕЛЬНЫЙ САМОСТОЯТЕЛЬНЫЙ ПРОДУКТ (ЭТО 
          САЙТЫ, ПРЕДОСТАВЛЯЮЩИЕ ВЕБ-ИНТРЕФЕЙС ДЛЯ СИСТЕМЫ КОНТРОЛЯ ВЕРСИЙ, ПОСТРОЕННЫХ НА GIT).


